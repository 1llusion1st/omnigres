\pset null 'NULL'
\set dump_types 'select typ as typname,variants from omni_types.sum_types'
create or replace function get_type_size(data_type regtype)
    returns integer as
$$
select
    typlen
from
    pg_type
where
    oid = data_type
$$
    language sql;
-- Empty
begin;
select omni_types.sum_type('empty', variadic array []::regtype[]);
 sum_type 
----------
 empty
(1 row)

\dT
      List of data types
 Schema | Name  | Description 
--------+-------+-------------
 public | empty | 
(1 row)

:dump_types;
 typname | variants 
---------+----------
 empty   | {}
(1 row)

select null::empty is null as is_null;
 is_null 
---------
 t
(1 row)

rollback;
-- Single fixed size by val
begin;
select omni_types.sum_type('sum_type', 'integer');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | sum_type | 
(1 row)

:dump_types;
 typname  | variants  
----------+-----------
 sum_type | {integer}
(1 row)

select get_type_size('sum_type');
 get_type_size 
---------------
             8
(1 row)

select 'integer(100)'::sum_type;
   sum_type   
--------------
 integer(100)
(1 row)

select 'integer(100)'::sum_type::integer;
 int4 
------
  100
(1 row)

select 100::sum_type;
   sum_type   
--------------
 integer(100)
(1 row)

rollback;
-- Multiple fixed size by val
begin;
select omni_types.sum_type('sum_type', 'integer', 'bigint');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | sum_type | 
(1 row)

:dump_types;
 typname  |     variants     
----------+------------------
 sum_type | {integer,bigint}
(1 row)

select get_type_size('sum_type');
 get_type_size 
---------------
            12
(1 row)

select 'integer(1000)'::sum_type;
   sum_type    
---------------
 integer(1000)
(1 row)

select 'integer(1000)'::sum_type::integer;
 int4 
------
 1000
(1 row)

select 1000::sum_type;
   sum_type    
---------------
 integer(1000)
(1 row)

select 'bigint(10000000000)'::sum_type;
      sum_type       
---------------------
 bigint(10000000000)
(1 row)

select 'bigint(10000000000)'::sum_type::bigint;
    int8     
-------------
 10000000000
(1 row)

select 10000000000::bigint::sum_type;
      sum_type       
---------------------
 bigint(10000000000)
(1 row)

rollback;
-- Single fixed size
begin;
select omni_types.sum_type('sum_type', 'name');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | sum_type | 
(1 row)

:dump_types;
 typname  | variants 
----------+----------
 sum_type | {name}
(1 row)

select get_type_size('sum_type');
 get_type_size 
---------------
            68
(1 row)

select 'name(test)'::sum_type;
  sum_type  
------------
 name(test)
(1 row)

select 'name(test)'::sum_type::name;
 name 
------
 test
(1 row)

select 'test'::name::sum_type;
  sum_type  
------------
 name(test)
(1 row)

rollback;
-- Multiple fixed size, by val is mixed
begin;
select omni_types.sum_type('sum_type', 'name', 'integer');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | sum_type | 
(1 row)

:dump_types;
 typname  |    variants    
----------+----------------
 sum_type | {name,integer}
(1 row)

select get_type_size('sum_type');
 get_type_size 
---------------
            68
(1 row)

select 'name(test)'::sum_type;
  sum_type  
------------
 name(test)
(1 row)

select 'name(test)'::sum_type::name;
 name 
------
 test
(1 row)

select 'test'::name::sum_type;
  sum_type  
------------
 name(test)
(1 row)

select 'integer(1000)'::sum_type;
   sum_type    
---------------
 integer(1000)
(1 row)

select 'integer(1000)'::sum_type::integer;
 int4 
------
 1000
(1 row)

select 1000::sum_type;
   sum_type    
---------------
 integer(1000)
(1 row)

rollback;
-- Single variable size
begin;
select omni_types.sum_type('sum_type', 'text');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | sum_type | 
(1 row)

:dump_types;
 typname  | variants 
----------+----------
 sum_type | {text}
(1 row)

select get_type_size('sum_type');
 get_type_size 
---------------
            -1
(1 row)

select 'text(Hello)'::sum_type;
  sum_type   
-------------
 text(Hello)
(1 row)

select 'text(Hello)'::sum_type::text;
 text  
-------
 Hello
(1 row)

select 'Hello'::text::sum_type;
  sum_type   
-------------
 text(Hello)
(1 row)

rollback;
-- Multiple mixed variable and fixed size
begin;
select omni_types.sum_type('sum_type', 'text', 'integer', 'name');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | sum_type | 
(1 row)

:dump_types;
 typname  |      variants       
----------+---------------------
 sum_type | {text,integer,name}
(1 row)

select get_type_size('sum_type');
 get_type_size 
---------------
            -1
(1 row)

select 'text(Hello)'::sum_type;
  sum_type   
-------------
 text(Hello)
(1 row)

select 'text(Hello)'::sum_type::text;
 text  
-------
 Hello
(1 row)

select 'Hello'::text::sum_type;
  sum_type   
-------------
 text(Hello)
(1 row)

select 'integer(1000)'::sum_type;
   sum_type    
---------------
 integer(1000)
(1 row)

select 'integer(1000)'::sum_type::integer;
 int4 
------
 1000
(1 row)

select 1000::sum_type;
   sum_type    
---------------
 integer(1000)
(1 row)

select 'name(test)'::sum_type;
  sum_type  
------------
 name(test)
(1 row)

select 'name(test)'::sum_type::name;
 name 
------
 test
(1 row)

select 'test'::name::sum_type;
  sum_type  
------------
 name(test)
(1 row)

rollback;
-- Domains
begin;
create domain height as integer check (value > 0);
create domain age as integer check (value > 0 and value < 200);
select omni_types.sum_type('sum_type', 'height', 'age');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | age      | 
 public | height   | 
 public | sum_type | 
(3 rows)

:dump_types;
 typname  |   variants   
----------+--------------
 sum_type | {height,age}
(1 row)

select get_type_size('sum_type');
 get_type_size 
---------------
             8
(1 row)

select 'height(100)'::sum_type;
  sum_type   
-------------
 height(100)
(1 row)

select 'age(100)'::sum_type;
 sum_type 
----------
 age(100)
(1 row)

-- Can't cast domain types, use functions
select sum_type_from_height(100);
 sum_type_from_height 
----------------------
 height(100)
(1 row)

select sum_type_from_age(100);
 sum_type_from_age 
-------------------
 age(100)
(1 row)

rollback;
--- Composite types
begin;
create type person as
(
    name text,
    dob  date
);
create type animal as enum ('dog', 'cat', 'fish', 'other');
create type pet as
(
    name   text,
    animal animal
);
select omni_types.sum_type('sum_type', 'person', 'pet');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | animal   | 
 public | person   | 
 public | pet      | 
 public | sum_type | 
(4 rows)

:dump_types;
 typname  |   variants   
----------+--------------
 sum_type | {person,pet}
(1 row)

select get_type_size('sum_type');
 get_type_size 
---------------
            -1
(1 row)

select $$person((John,01/01/1980))$$::sum_type;
         sum_type          
---------------------------
 person((John,01-01-1980))
(1 row)

select $$pet((Charlie,dog))$$::sum_type;
      sum_type      
--------------------
 pet((Charlie,dog))
(1 row)

select row ('John', '01/01/1980')::person::sum_type;
            row            
---------------------------
 person((John,01-01-1980))
(1 row)

select row ('Charlie','dog')::pet::sum_type;
        row         
--------------------
 pet((Charlie,dog))
(1 row)

select row ('John', '01/01/1980')::person::sum_type::person;
        row        
-------------------
 (John,01-01-1980)
(1 row)

select row ('John', '01/01/1980')::person::sum_type::pet;
 row  
------
 NULL
(1 row)

select row ('Charlie','dog')::pet::sum_type::pet;
      row      
---------------
 (Charlie,dog)
(1 row)

select row ('Charlie','dog')::pet::sum_type::person;
 row  
------
 NULL
(1 row)

rollback;
-- Casting variants to different types
begin;
select omni_types.sum_type('sum_type', 'integer', 'boolean');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | sum_type | 
(1 row)

:dump_types;
 typname  |     variants      
----------+-------------------
 sum_type | {integer,boolean}
(1 row)

select 100::sum_type::boolean;
 bool 
------
 NULL
(1 row)

select true::sum_type::integer;
 int4 
------
 NULL
(1 row)

rollback;
-- Duplicates
begin;
select omni_types.sum_type('sum_type', 'integer', 'integer');
ERROR:  Sum types can not contain duplicate variants
CONTEXT:  PL/pgSQL function omni_types.sum_type_unique_variants_trigger_func() line 12 at RAISE
SQL statement "insert into omni_types.sum_types (typ, variants) values ($1, $2)"
rollback;
-- Determining variant
begin;
select omni_types.sum_type('sum_type', 'integer', 'boolean');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | sum_type | 
(1 row)

:dump_types;
 typname  |     variants      
----------+-------------------
 sum_type | {integer,boolean}
(1 row)

select omni_types.variant(100::sum_type);
 variant 
---------
 integer
(1 row)

select omni_types.variant(true::sum_type);
 variant 
---------
 boolean
(1 row)

-- Invalid type
select omni_types.variant(10);
 variant 
---------
 NULL
(1 row)

rollback;
-- TOASTing
begin;
select omni_types.sum_type('sum_type', 'text', 'integer');
 sum_type 
----------
 sum_type
(1 row)

\dT;
       List of data types
 Schema |   Name   | Description 
--------+----------+-------------
 public | sum_type | 
(1 row)

:dump_types;
 typname  |    variants    
----------+----------------
 sum_type | {text,integer}
(1 row)

create table test (val sum_type);
alter table test alter val set storage external;
insert into test values (repeat('a', 100000)::text::sum_type),(1000);
select omni_types.variant(val) from test;
 variant 
---------
 text
 integer
(2 rows)

select (case when omni_types.variant(val) = 'text'::regtype then length(val::text)
             when omni_types.variant(val) = 'integer'::regtype then val::integer
             else null end) from test;
  case  
--------
 100000
   1000
(2 rows)

rollback;
-- Pseudo-types can't be used
begin;
select omni_types.sum_type('sum_type', 'text', 'anyarray');
ERROR:  Pseudo-types can't be variants
DETAIL:  anyarray
rollback;
-- Ensure no types are leaked
\dT;
     List of data types
 Schema | Name | Description 
--------+------+-------------
(0 rows)

:dump_types;
 typname | variants 
---------+----------
(0 rows)

