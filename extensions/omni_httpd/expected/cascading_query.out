create table routes
(
    name     text not null,
    query    text not null,
    priority int  not null
);
insert
into
    routes (name, query, priority)
values
    ('test', $$SELECT omni_httpd.http_response(body => 'test') FROM request WHERE request.path = '/test'$$, 1),
    ('ping', $$SELECT omni_httpd.http_response(body => 'pong') FROM request WHERE request.path = '/ping'$$, 1);
\pset format wrapped
\pset columns 80
-- Preview the query
select
    omni_httpd.cascading_query(name, query order by priority desc nulls last)
from
    routes;
                                cascading_query                                 
--------------------------------------------------------------------------------
 WITH test AS (SELECT omni_httpd.http_response(body := 'test') FROM request WHE.
.RE request.path = '/test'), ping AS (SELECT omni_httpd.http_response(body := '.
.pong') FROM request WHERE request.path = '/ping') SELECT * FROM test UNION ALL.
. SELECT * FROM ping WHERE NOT EXISTS (SELECT FROM test)
(1 row)

\pset format aligned
-- Try it
begin;
with
    listener as (insert into omni_httpd.listeners (address, port) values ('127.0.0.1', 9100) returning id),
    handler as (insert into omni_httpd.handlers (query) select
                                                            omni_httpd.cascading_query(name, query
                                                                                       order by priority desc nulls last)
                                                        from
                                                            routes returning id)
insert
into
    omni_httpd.listeners_handlers (listener_id, handler_id)
select
    listener.id,
    handler.id
from
    listener,
    handler;
delete
from
    omni_httpd.configuration_reloads;
end;
call omni_httpd.wait_for_configuration_reloads(1);
\! curl --retry-connrefused --retry 10  --retry-max-time 10 -w '\n\n' --silent http://localhost:9100/test
test

\! curl --retry-connrefused --retry 10  --retry-max-time 10 -w '\n\n' --silent http://localhost:9100/ping
pong

-- CTE handling
\pset format wrapped
\pset columns 80
select
    omni_httpd.cascading_query(name, query order by priority desc nulls last)
from
    (values
         ('test',
          $$WITH test AS (SELECT 1 AS val) SELECT omni_httpd.http_response(body => 'test') FROM request, Test WHERE request.path = '/test' and test.val = 1$$,
          1),
         ('ping',
          $$WITH test AS (SELECT 1 AS val) SELECT omni_httpd.http_response(body => 'pong') FROM request, Test WHERE request.path = '/ping' and test.val = 1$$,
          1))
        as routes(name, query, priority);
                                cascading_query                                 
--------------------------------------------------------------------------------
 WITH __omni_httpd_test_test AS (SELECT 1 AS val), test AS (SELECT omni_httpd.h.
.ttp_response(body := 'test') FROM request, __omni_httpd_test_test test WHERE r.
.equest.path = '/test' AND test.val = 1), __omni_httpd_ping_test AS (SELECT 1 A.
.S val), ping AS (SELECT omni_httpd.http_response(body := 'pong') FROM request,.
. __omni_httpd_ping_test test WHERE request.path = '/ping' AND test.val = 1) SE.
.LECT * FROM test UNION ALL SELECT * FROM ping WHERE NOT EXISTS (SELECT FROM te.
.st)
(1 row)

\pset format aligned
